#include <string>
#include <vector>

using namespace std;

/*
내가 푼 거 아님... dfs, bfs 개념을 대강 알아도 어떻게 활용해야되는지 감이 안잡혀서
다른 분이 자바로 풀으신 걸 조금 바꿈.
숫자들이 노드, 숫자들의 인덱스값이 깊이라고 함.
깊이를 끝까지 내려갔을 때, 찾고자 하는 수가 되었으면 1을 return, 아니면 0을 return.
모든 경우의 수에 대해 따지려고 할 때는 dfs를 쓰는 것 같이 보인다. 일단은... 
*/

int dfs(vector<int> numbers, int target, int index, int num)
{   
    if(index==numbers.size())
    {
        return num==target?1:0;
    }
    else
    {
        return dfs(numbers, target, index+1, num+numbers[index])+dfs(numbers, target, index+1, num-numbers[index]);
    }
}

int solution(vector<int> numbers, int target) {
    return dfs(numbers, target, 0, 0);
}
